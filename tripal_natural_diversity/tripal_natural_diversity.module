<?php

require_once('api/tripal_natural_diversity.api.inc');
require_once('includes/tripal_natural_diversity.schema.inc');
require_once('includes/tripal_natural_diversity.admin.inc');
/**
 *  @file
 * This file contains the basic functions needed for this drupal module.
 * The drupal tripal_natural_diversity module maps directly to the chado X module.
 *
 * For documentation regarding the Chado X module:
 * @see http://gmod.org/wiki/Chado_General_Module
 *
 * @defgroup tripal_natural_diversity Natural Diversity Module
 * @ingroup tripal_modules
 */

/**
 *  Menu items are automatically added for the new node types created
 *  by this module to the 'Create Content' Navigation menu item.  This function
 *  adds more menu items needed for this module.
 *
 * @ingroup tripal_natural_diversity
 */
function tripal_natural_diversity_menu() {
  $items = array();

    // the administative settings menu
  $items['admin/tripal/chado/tripal_natdiv'] = array(
   'title' => 'Natural Diversity Experiments',
   'description' => 'Experiments relating to natural diversity such as genotype and phenotype experiments.',
   'page callback' => 'tripal_natural_diversity_admin_natdiv_view',
   'access arguments' => array('adminster tripal natural_diversity'),
   'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/tripal/chado/tripal_natdiv/help'] = array(
   'title' => 'Help',
   'description' => "A description of the Tripal natural_diversity module including a short description of it's usage.",
   'page callback' => 'theme',
   'page arguments' => array('tripal_natdiv_help'),
   'access arguments' => array('adminster tripal natural_diversity'),
   'type' => MENU_LOCAL_TASK,
   'weight' => 10
  );

  $items['admin/tripal/chado/tripal_natdiv/views/natdiv_exp/enable'] = array(
    'title' => 'Enable Natural Diversity Administrative View',
    'page callback' => 'tripal_views_admin_enable_view',
    'page arguments' => array('tripal_natural_diversity_admin_natdiv_exp', 'admin/tripal/chado/tripal_natdiv'),
    'access arguments' => array('administer tripal natural_diversity'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_views_api()
 * Purpose: Essentially this hook tells drupal that there is views support for
 *  for this module which then includes tripal_natural_diversity.views.inc where all the
 *  views integration code is
 *
 * @ingroup tripal_natural_diversity
 */
function tripal_natural_diversity_views_api() {
  return array(
      'api' => 3.0,
  );
}

/**
 * Implements hook_theme
 *
 * @ingroup tripal_natural_diversity
 */
function tripal_natural_diversity_theme() {
  $theme_path = drupal_get_path('module', 'tripal_natural_diversity') . '/theme';
  $items = array(
    // tripal_feature templates
    'tripal_feature_nd_genotypes' => array(
      'arguments' => array('node' => NULL),
      'template' => 'tripal_feature_nd_genotypes',
      'path' => "$theme_path/tripal_feature",
    ),
    // tripal_stock templates
    'tripal_stock_nd_genotypes' => array(
      'arguments' => array('node' => NULL),
      'template' => 'tripal_stock_nd_genotypes',
      'path' => "$theme_path/tripal_stock",
    ),
    'tripal_stock_nd_phenotypes' => array(
      'arguments' => array('node' => NULL),
      'template' => 'tripal_stock_nd_phenotypes',
      'path' => "$theme_path/tripal_stock",
    ),
    'tripal_natdiv_help' => array(
      'template' => 'tripal_natdiv_help',
      'variables' =>  array(NULL),
      'path' => "$theme_path",
    ),
  );
  return $items;
}

/**
 * @ingroup tripal_library
 */
function tripal_natural_diversity_block_info() {

  $blocks['ndfgenotype']['info'] = t('Tripal Natural Diversity Feature Genotypes');
  $blocks['ndfgenotype']['cache'] = 'BLOCK_NO_CACHE';

  $blocks['ndsgenotype']['info'] = t('Tripal Natural Diversity Library Genotypes');
  $blocks['ndsgenotype']['cache'] = 'BLOCK_NO_CACHE';

  $blocks['ndsphenotype']['info'] = t('Tripal Natural Diversity Stock Phenotypes');
  $blocks['ndsphenotype']['cache'] = 'BLOCK_NO_CACHE';

  return $blocks;
}
/**
 * @ingroup tripal_library
 */
function tripal_natural_diversity_block_view($delta = '') {

  if (user_access('access chado_library content') and arg(0) == 'node' and is_numeric(arg(1))) {
    $nid = arg(1);
    $node = node_load($nid);

    $block = array();
    switch ($delta) {
    	case 'ndfgenotype':
    	  $block['subject'] = t('Genotypes');
    	  $block['content'] = theme('tripal_feature_nd_genotypes', $node);
    	  break;
    	case 'ndsgenotype':
    	  $block['subject'] = t('Stock Genotypes');
    	  $block['content'] = theme('tripal_stock_nd_genotypes', $node);
    	  break;
    	case 'ndsphenotype':
    	  $block['subject'] = t('Phenotypes');
    	  $block['content'] = theme('tripal_stock_nd_phenotypes', $node);
    	  break;
    	default :
    }
    return $block;
  }
}
/**
 *
 * @ingroup tripal_natural_diversity
 */
function tripal_natural_diversity_node_view(&$node, $view_mode, $langcode) {
    if ($node->type == 'chado_feature') {
      // the tripal_genetic module provides a tripal_feature_genotype
      // template.  The only difference between them is the addition of
      // project information by this module's template.  Therefore,
      // if the tripal_genetic content is present get rid of as this
      // module superceeds it.
      if ($view_mode == 'full') {
        if (array_key_exists('tripal_feature_genotypes', $node->content)) {
          unset($node->content['tripal_feature_genotypes']);
        }
        $node->content['tripal_feature_nd_genotypes'] = array(
           '#value' => theme('tripal_feature_nd_genotypes', $node),
        );
      }
    }
    if ($node->type == 'chado_stock') {
      if ($view_mode == 'full') {
        $node->content['tripal_stock_nd_genotypes'] = array(
           '#value' => theme('tripal_stock_nd_genotypes', $node),
        );
        $node->content['tripal_stock_nd_phenotypes'] = array(
           '#value' => theme('tripal_stock_nd_phenotypes', $node),
        );
      }
    }
    break;
}
